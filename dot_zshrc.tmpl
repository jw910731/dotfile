# # {{- if eq .chezmoi.os "darwin" }}
# # Fig pre block. Keep at the top of this file.
# [[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"
# {{- end }}

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

# Load Zinit
if [[ ! -d ~/.zinit ]]; then
    mkdir -p ~/.zinit && \
        git clone --depth 1 \
        https://github.com/zdharma/zinit.git \
        ~/.zinit/bin
fi
source ~/.zinit/bin/zinit.zsh

# Setup Zinit Plugins
## p10k
{{- if eq .chezmoi.os "linux" }}
if [[ $TERM != "linux" ]]; then
{{- end }}
zinit depth"1" light-mode for \
  @romkatv/powerlevel10k
{{- if eq .chezmoi.os "linux" }}
fi
{{- end }}

zinit wait"0" silent depth"1" light-mode for \
{{- if eq .chezmoi.os "darwin" }}
    @PZTM::osx \
{{- end }}
{{- if eq .chezmoi.os "linux" }}
    @PZTM::command-not-found \
    @endaaman/lxd-completion-zsh \
{{- end }}
    @OMZP::git \
    @wfxr/forgit \
    @thetic/extract \
    @MichaelAquilina/zsh-you-should-use \
    @PZTM::gnu-utility \
    @PZTM::history \
    @PZTM::directory \
    @zsh-users/zsh-history-substring-search \
    @zsh-users/zsh-autosuggestions \
    nocompile \
        MenkeTechnologies/zsh-cargo-completion \
    has"rustup" as"completion" id-as"rust_completion" atclone"rustup completions zsh > _rustup" completions atpull"%atclone" run-atpull \
        zdharma-continuum/null \
    has"rye" as"completion" id-as"rye_completion" atclone"rye self completion -s zsh > _rye" completions atpull"%atclone" run-atpull \
        zdharma-continuum/null \
    atinit"zicompinit; zicdreplay" \
        @Aloxaf/fzf-tab \
    as"completion" \
        @https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker \
    atinit"zicompinit; zicdreplay" wait"0b" \
        @zdharma-continuum/fast-syntax-highlighting \
    blockf atpull'zinit creinstall -q .' \
        @zsh-users/zsh-completions \
    @https://github.com/ariaieboy/laravel-sail/blob/main/laravel-sail.plugin.zsh

## Cache zsh complete
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

## The following lines were added by compinstall
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' list-suffixeszstyle ':completion:*' expand prefix suffix
zstyle ':completion:*' menu select=2
zstyle ':completion:*' verbose true
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*:processes' command 'ps -au$USER'
zstyle ':completion:complete:*:options' sort false
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm,cmd -w -w"
zstyle ":completion:*:git-checkout:*" sort false
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

zstyle :compinstall filename '/home/jw910731/.zshrc'
autoload -Uz compinit
compinit
## End of lines added by compinstall

## 1password autocompletion
if (( $+commands[op] )); then
    eval "$(op completion zsh)"; compdef _op op
fi

# kitty autocompletion
if (( $+commands[kitty] )); then
    kitty + complete setup zsh | source /dev/stdin
fi

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt autocd beep nomatch
unsetopt extendedglob notify
bindkey -e
# End of lines configured by zsh-newuser-install

# Custom zsh config
setopt AUTO_PARAM_SLASH # (autocomplete) If completed parameter is a directory, add a trailing slash
unsetopt MENU_COMPLETE # Do not autoselect the first completion entry
unsetopt FLOW_CONTROL # Disable start/stop characters (^Z, ^C, etc) in shell editor

# Set title
preexec() {print -Pn "\e]0;zsh [ $1 ]\a"}
precmd () {print -Pn "\e]0;zsh ( %~ )\a"}

autoload -U select-word-style
select-word-style bash
## keybind
{{- if eq .chezmoi.os "darwin" }}
bindkey '^[^?' backward-kill-word # meta + delete
bindkey "^[^[[D" backward-word # meta + left arrow
bindkey "^[^[[C" forward-word # meta + right arrow
{{- end }}
{{- if eq .chezmoi.os "linux" }}
bindkey "^[[3~" delete-char # delete
bindkey "^[[1;3C" forward-word # meta + right arrow
bindkey "^[[1;3D" backward-word # meta + left arrow
{{- end }}

# Golang env setting
if (( $+commands[go] )); then
export GOPATH=$HOME/dev/go
export GOBIN=$GOPATH/bin
fi

# Source general source files
source $HOME/.sh_env

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

{{- if eq .chezmoi.os "darwin" }}
# iterm integration
test -e ~/.iterm2_shell_integration.zsh && source ~/.iterm2_shell_integration.zsh || true
{{- end }}

{{- if eq .chezmoi.os "linux" }}
gpgconf --create-socketdir >/dev/null 2>&1
{{- end }}

# Wasmer
export WASMER_DIR="/Users/jw910731/.wasmer"
[ -s "$WASMER_DIR/wasmer.sh" ] && source "$WASMER_DIR/wasmer.sh"

# {{- if eq .chezmoi.os "darwin" }}
# # Fig post block. Keep at the bottom of this file.
# [[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
# {{- end }}